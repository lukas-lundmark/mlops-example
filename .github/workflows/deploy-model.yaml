name: Deploy Model

# Run this workflow if the train pipeline succeeded
on:
  repository_dispatch:
    types: [model-trained-event]
  workflow_dispatch:

env:
  RESOURCE_GROUP: mlops-rg
  WORKSPACE: azure-ml-toyota-demo
  MODEL_ID: ${{ github.event.client_payload.model }}

jobs:

  test-deploy-model:
    name: test-deploy-model
    runs-on: ubuntu-latest
    env:
      INFERENCE_CLUSTER_NAME: "test-cluster"
      SERVICE_NAME: "test-service"
      MODEL_ID: ${{ github.event.client_payload.model }}

    container:
      image: ghcr.io/lukas-lundmark/mlops-ci-image:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.CR_PAT }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: AML Login
        uses: ./.github/actions/aml_login
        with:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
          RESOURCE_GROUP: ${{ env.RESOURCE_GROUP }}
          WORKSPACE: ${{ env.WORKSPACE }}

      - name: "Deploy Model to Webservice"
        run: python -m ml_pipelines.deploy.build_remote_webservice --id ${{ env.MODEL_ID }}

      - name: "Smoke Test Webservice"
        continue-on-error: true
        run: python -m ml_pipelines.deploy.smoke_test

      - name: "Destroy Test Model"
        run: python -m ml_pipelines.deploy.delete_service

  deploy-model:
    name: run_train_endpoint
    runs-on: ubuntu-latest
    needs: test-deploy-model

    env:
      MODEL_ID: ${{ github.event.client_payload.model }}

    container:
      image: ghcr.io/lukas-lundmark/mlops-ci-image:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.CR_PAT }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: AML Login
        uses: ./.github/actions/aml_login
        with:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
          RESOURCE_GROUP: ${{ env.RESOURCE_GROUP }}
          WORKSPACE: ${{ env.WORKSPACE }}

      - name: "Deploy the production Web Service"
        id: "deploy-test-model"
        run: python -m ml_pipelines.deploy.build_remote_webservice --id ${{ env.MODEL_ID }}
