name: Continuous-Training
on: workflow_dispatch

env:
  RESOURCE_GROUP: mlops-rg
  WORKSPACE: azure-ml-toyota-demo
  TRAIN_PIPELINE_NAME: train-pipeline
  PIPELINE_ENDPOINT_NAME: train-pipeline-endpoint
  EXPERIMENT_NAME: CT-Workflow-Experiment

jobs:
  run_train_endpoint:
    name: run_train_endpoint
    runs-on: ubuntu-latest
    env:
      MODEL_NAME: just-a-test-model

    container:
      image: ghcr.io/lukas-lundmark/mlops-ci-image:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.CR_PAT }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: AML Login
        uses: ./.github/actions/aml_login
        with:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
          RESOURCE_GROUP: ${{ env.RESOURCE_GROUP }}
          WORKSPACE: ${{ env.WORKSPACE }}

      - name: Start Pipeline
        id: start-pipeline
        run: |
          OUTPUTFILE=status-output.txt
          python -m ml_pipelines.complex_pipeline.run_pipeline  \
              --status-output $OUTPUTFILE
          echo ::set-output name=status::$(cat $OUTPUTFILE)

      - name: Check status of Pipeline Run
        id: check-pipeline
        run: |
          status=${{ steps.start-pipeline.outputs.status }}
          echo $status
          if [ "$status" = "Canceled" ]; then
              echo "Pipeline was canceled"
          elif [ "$status" = "Failed" ]; then
              echo "Pipeline failed"
          else
              echo "Pipeline succeeded"
          fi

      - name: Download Model Artifact from AML
        if: ${{ steps.start-pipeline.outputs.status }} == 'Succeeded'
        run : |

          python -m ml_pipelines.misc.download_model --output model.json

      - name: Upload model as artifact
        if: ${{ steps.start-pipeline.outputs.status }} == 'Succeeded'
        uses: actions/upload-artifact@v3
        with:
          name: model
          path: ./model.json

      - name: Dispatch
        uses: peter-evans/repository-dispatch@v1
        if: ${{ steps.start-pipeline.outputs.status }} == 'Canceled'
        with:
          token: ${{ secrets.CR_PAT }}
          event-type: model-trained-event
